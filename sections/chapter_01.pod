=head0 The Perl Philosophy

Perl is a language for getting things done.  It's flexible, forgiving, and
malleable.  In the hands of a capable programmer, it can accomplish almost any
task, from one-liner calculations and automations to multi-programmer,
multi-year projects and everything in between.

Perl is powerful, and modern Perl--Perl which takes advantage of the best
knowledge, deepest experience, and reusable idioms of the global Perl
community--is maintainable, fast, and easy to use.  Perhaps most
importantly, it can help you do what you need to do with little frustration
and no ceremony.

Perl is a pragmatic language.  You, the programmer, are in charge.  Rather than
manipulating your mind and your problems to fit how the language designer
thinks you should write programs, Perl allows you to solve your problems as you
see fit.

Perl is a language which can grow with you.  You can write useful programs with
the knowledge that you can learn in an hour of reading this book.  Yet if you
take the time to understand the philosophies behind the syntax, semantics, and
design of the language, you can be far more productive.

First, you need to know how to learn more.

L<perldoc>

L<expressivity>

L<context_philosophy>

L<implicit_ideas>
