=head2 The CPAN

Z<cpan>

Perl 5 is a pragmatic language.  It'll help you get your work done.  Yet the
ever-pragmatic Perl community has extended that language and made their work
available to the world.  If you have a problem to solve, chances are someone's
already uploaded code to the CPAN for it.

The line between a modern language and its libraries is thin and fuzzy.  Is a
language only syntax?  Is it the core libraries?  Is it the availability of
external libraries and the ease at which you can use them within your own
projects?

X<CPAN>

Regardless of how you answer those questions for any other language, modern
Perl programming makes heavy use of the CPAN (U<http://www.cpan.org/>).  The
CPAN, or Comprehensive Perl Archive Network, is an uploading and mirroring
system for redistributable, reusable Perl code.  It's one of--if not
I<the>--largest archives of libraries of code in the world.

X<distribution>
X<module>

CPAN mirrors I<distributions>, which tend to be collections of reusable Perl
code.  A single distribution can contain one or more I<modules>, which are
self-contained libraries of Perl code.  Each distribution lives in its own
namespace on the CPAN, contains its own metadata, and is buildable,
installable, updateable, and testable on its own.

=begin sidebar

The CPAN I<adds> hundreds of registered contributors and thousands of indexed
modules in hundreds of distributions every month.  Those numbers do not take
into account updates.  In late April 2010, search.cpan.org reported 8156
uploaders, 81436 modules, and 20065 distributions.

=end sidebar

X<search.cpan.org>

The CPAN itself is merely a mirroring service.  Authors upload distributions
containing modules, and the CPAN sends them to mirror sites, from which users
and CPAN clients download, configure, build, test, and install distributions.
Yet the CPAN has succeeded because of this simplicity, and because of the
contributions of thousands of volunteers who've built on this distribution
system to produce something greater.  In particular, community standards have
evolved to identify the attributes and characteristics of well-formed CPAN
distributions.  These include:

=over 4

=item Standards for installation to work with automated CPAN installers.

=item Standards for metadata to describe what each distribution includes and
any dependencies of the distribution.

=item Standards for documentation and licensing to describe what the
distribution does and how you may use it.

=back

Additional CPAN services provide comprehensive automated testing and reporting
of every CPAN distribution for adherence to packaging and distribution
guidelines and correctness of behavior on various platforms and versions of
Perl.  Every CPAN distribution has its own ticket queue on
U<http://rt.cpan.org/> for reporting bugs and working with authors.
Distributions also have historical versions available on the CPAN, ratings,
annotations for the documentation, and other useful information.  All of this
is available from U<http://search.cpan.org/>.

X<CPAN.pm>
X<CPANPLUS>

Modern Perl installations include two clients to connect to, search, download,
build, test, and install CPAN distributions, CPAN.pm and CPANPLUS.  They behave
equivalently; their use is a matter of taste.  This book recommends the use of
CPAN.pm solely due to its ubiquity.

CPAN.pm configuration is largely decision-free.  For any complete installation
of Perl, you may start the client with:

    $ B<cpan>

To install a distribution:

    $ B<cpan Modern::Perl>

X<Eric Wilhelm>
X<CPAN.pm; configuration>
X<CPAN.pm; troubleshooting>

Eric Wilhelm's excellent tutorial on configuring CPAN.pm
(U<http://learnperl.scratchcomputing.com/tutorials/configuration/>) is worth
reading twice, especially its section on troubleshooting.

=begin sidebar

Even though the CPAN client is a core module for the Perl 5 distribution, you
may also have to install standard development tools such as a C<make> utility
and possibly a C compiler to install all of the distributions you want.
Strawberry Perl and Strawberry Perl Professional include such utilities for
Windows users. Mac OS X users need their developer tools installed; Unix and
Unix-like users, consult your local system administrator.

=end sidebar

For your work setting up a CPAN client and an environment to build and install
distributions, you get access to libraries for everything from database access
to profiling tools to protocols for almost every network device ever created to
sound and graphics libraries and wrappers for shared libraries on your system.

Modern Perl without the CPAN is just another language.  Modern Perl with the
CPAN... now you have something amazing.

=begin sidebar

Three projects are worth your attention throughout 2010.  C<local::lib>, a CPAN
module, allows you to install and to manage distributions in your own user
directory, rather than for the system as a whole.  This is an effective way to
have your own CPAN installation without disturbing other users.

C<App::cpanminus> is a new CPAN client with goals of speed, simplicity, and
zero configuration.

C<App::perlbrew> is a system to manage and to switch between your own installations of multiple versions and configurations of Perl.

Advanced users will see more benefit from these projects, but novices can and
should take advantage of them as well.

=end sidebar
