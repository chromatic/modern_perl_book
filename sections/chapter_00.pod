=head0 Preface

Perl turns 23 years old later this year.  The language has gone from a simple
tool for system administration somewhere between shell scripting and C
programming (Perl 1) to a powerful, general purpose language steeped in a rich
heritage (Perl 5) and a consistent, coherent, rethinking of programming in
general intended to last for another 25 years (Perl 6).

Even so, most Perl 5 programs in the world take far too little advantage of the
language.  You I<can> write Perl 5 programs as if they were Perl 4 programs (or
Perl 3 or 2 or 1), but programs written to take advantage of everything amazing
the worldwide Perl 5 community has invented, polished, and discovered are
shorter, faster, more powerful, and easier to maintain than their alternatives.

I<Modern Perl> is a loose description of how experienced and effective Perl 5
programmers work.  They use language idioms.  They take advantage of the CPAN.
They're recognizably Perlish, and they show good taste and craftsmanship and a
full understanding of Perl.

You can learn this too.

=head0 Running Modern Perl

You don't have to install a new version of Perl to take advantage of most of
this book, but the examples given assume that you're using Perl 5.10 or newer.
Unless otherwise mentioned, code snippets always assume the basic skeleton of a
program:

=begin programlisting

    #!/usr/bin/perl

    use Modern::Perl;

    # example code here
    ...

=end programlisting

Other code snippets use testing functions such as C<ok()>, C<like()>, and
C<is()> (L<testing>).  That skeleton program is:

=begin programlisting

    #!/usr/bin/perl

    use Modern::Perl;
    B<use Test::More;>

    # example code here
    ...
    done_testing();

=end programlisting

If you don't already have a modern version of Perl installed, you can often
install one yourself.  Windows users can download Strawberry Perl from
U<http://www.strawberryperl.com/>.  Users of other operating systems with Perl
5 already installed (and a C compiler and the other development tools), start
by installing the CPAN module C<App::perlbrew>N<See
U<http://search.cpan.org/perldoc?App::perlbrew> for installation
instructions.>.

C<perlbrew> allows you to install and to manage multiple versions of Perl 5.
By default, it installs them to your own home directory.  Not only can you have
multiple versions of Perl 5 installed without affecting the system Perl but you
can also install any module you like into these directories without asking your
system administrator for specific permission.

=begin sidebar

Which version of Perl 5 should you install?  The rest of this book assumes
you're using something at least as new as Perl 5.10.0--preferably 5.10.1--but,
as written, all code examples will work with every release in the Perl 5.12.x
family.  The book also indicates features added to Perl 5.12.

=end sidebar

